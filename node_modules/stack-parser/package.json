{
  "_args": [
    [
      "stack-parser@https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
      "/var/www/html/netCanvas"
    ]
  ],
  "_from": "stack-parser@>=0.0.1 <0.0.2",
  "_id": "stack-parser@0.0.1",
  "_inCache": true,
  "_location": "/stack-parser",
  "_phantomChildren": {},
  "_requested": {
    "name": "stack-parser",
    "raw": "stack-parser@https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/grunt-notify"
  ],
  "_resolved": "https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
  "_shasum": "7d3b63a17887e9e2c2bf55dbd3318fe34a39d1e7",
  "_shrinkwrap": null,
  "_spec": "stack-parser@https://registry.npmjs.org/stack-parser/-/stack-parser-0.0.1.tgz",
  "_where": "/var/www/html/netCanvas",
  "author": {
    "email": "scaryzet@gmail.com",
    "name": "Ivan Zhidkov"
  },
  "bugs": {
    "url": "https://github.com/scaryzet/node-stack-parser/issues"
  },
  "dependencies": {},
  "description": "Error stack parser.",
  "devDependencies": {},
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/scaryzet/node-stack-parser#readme",
  "keywords": [],
  "license": {
    "type": "MIT",
    "url": "https://raw.github.com/scaryzet/node-stack-parser/master/LICENSE"
  },
  "main": "index.js",
  "name": "stack-parser",
  "optionalDependencies": {},
  "readme": "Error stack parser for node.js.\r\n\r\nInstallation\r\n------------\r\n\r\n```\r\nnpm install stack-parser\r\n```\r\n\r\nExample\r\n-------\r\n\r\n```javascript\r\nvar stackParser = require('stack-parser');\r\n\r\nvar items = stackParser.parse((new Error).stack);\r\n\r\nitems.forEach(function(item) {\r\n\tconsole.log(item.format());\r\n});\r\n\r\n// Use custom formatting.\r\n\r\nitems.forEach(function(item) {\r\n\tconsole.log(item.format('%what (%file, line: %line, column: %column)'));\r\n});\r\n\r\n// Use custom short formatting.\r\n\r\nitems.forEach(function(item) {\r\n\tconsole.log(item.format('%w (%f, line: %l, column: %c)'));\r\n});\r\n\r\n// Get a \"current stack\", synonym for \"stackParser.parse((new Error).stack);\".\r\n\r\nitems = stackParser.here();\r\n```\r\n\r\nLicense\r\n-------\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/scaryzet/node-stack-parser.git"
  },
  "scripts": {
    "test": "node index.js"
  },
  "version": "0.0.1"
}
