// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu component renders menu with list 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MenuFactory
    isOpen={false}
    items={
      Array [
        Object {
          "id": "a",
          "label": "a title",
          "to": "a-to",
        },
        Object {
          "id": "b",
          "label": "b title",
          "to": "b-to",
        },
        Object {
          "id": "c",
          "label": "c title",
          "to": "c-to",
        },
      ]
    }
    searchField={null}
    title="Options"
    toggleMenu={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        null,
        <div
          className="menu__wrap menu__content"
        >
          <Scrollable
            className="menu__scroller"
          >
            <Icon
              className="menu__cross"
              color=""
              name="close"
              onClick={[Function]}
              size="40px"
              style={Object {}}
            />
            <header>
              <h1
                className="menu__title"
              >
                Options
              </h1>
            </header>
            <nav>
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="a title"
                menuType="primary"
                onClick={[Function]}
                to="a-to"
              />
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="b title"
                menuType="primary"
                onClick={[Function]}
                to="b-to"
              />
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="c title"
                menuType="primary"
                onClick={[Function]}
                to="c-to"
              />
            </nav>
          </Scrollable>
        </div>,
      ],
      "className": "menu",
    },
    "ref": [Function],
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Scrollable
            className="menu__scroller"
          >
            <Icon
              className="menu__cross"
              color=""
              name="close"
              onClick={[Function]}
              size="40px"
              style={Object {}}
            />
            <header>
              <h1
                className="menu__title"
              >
                Options
              </h1>
            </header>
            <nav>
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="a title"
                menuType="primary"
                onClick={[Function]}
                to="a-to"
              />
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="b title"
                menuType="primary"
                onClick={[Function]}
                to="b-to"
              />
              <MenuItem
                icon=""
                interfaceType=""
                isActive={false}
                label="c title"
                menuType="primary"
                onClick={[Function]}
                to="c-to"
              />
            </nav>
          </Scrollable>,
          "className": "menu__wrap menu__content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Icon
                className="menu__cross"
                color=""
                name="close"
                onClick={[Function]}
                size="40px"
                style={Object {}}
              />,
              <header>
                <h1
                  className="menu__title"
                >
                  Options
                </h1>
              </header>,
              null,
              <nav>
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="a title"
                  menuType="primary"
                  onClick={[Function]}
                  to="a-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="b title"
                  menuType="primary"
                  onClick={[Function]}
                  to="b-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="c title"
                  menuType="primary"
                  onClick={[Function]}
                  to="c-to"
                />
              </nav>,
            ],
            "className": "menu__scroller",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "menu__cross",
                "color": "",
                "name": "close",
                "onClick": [Function],
                "size": "40px",
                "style": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1
                  className="menu__title"
                >
                  Options
                </h1>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Options",
                  "className": "menu__title",
                },
                "ref": null,
                "rendered": "Options",
                "type": "h1",
              },
              "type": "header",
            },
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="a title"
                    menuType="primary"
                    onClick={[Function]}
                    to="a-to"
                  />,
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="b title"
                    menuType="primary"
                    onClick={[Function]}
                    to="b-to"
                  />,
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="c title"
                    menuType="primary"
                    onClick={[Function]}
                    to="c-to"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "a",
                  "nodeType": "function",
                  "props": Object {
                    "icon": "",
                    "interfaceType": "",
                    "isActive": false,
                    "label": "a title",
                    "menuType": "primary",
                    "onClick": [Function],
                    "to": "a-to",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "b",
                  "nodeType": "function",
                  "props": Object {
                    "icon": "",
                    "interfaceType": "",
                    "isActive": false,
                    "label": "b title",
                    "menuType": "primary",
                    "onClick": [Function],
                    "to": "b-to",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "c",
                  "nodeType": "function",
                  "props": Object {
                    "icon": "",
                    "interfaceType": "",
                    "isActive": false,
                    "label": "c title",
                    "menuType": "primary",
                    "onClick": [Function],
                    "to": "c-to",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "nav",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          null,
          <div
            className="menu__wrap menu__content"
          >
            <Scrollable
              className="menu__scroller"
            >
              <Icon
                className="menu__cross"
                color=""
                name="close"
                onClick={[Function]}
                size="40px"
                style={Object {}}
              />
              <header>
                <h1
                  className="menu__title"
                >
                  Options
                </h1>
              </header>
              <nav>
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="a title"
                  menuType="primary"
                  onClick={[Function]}
                  to="a-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="b title"
                  menuType="primary"
                  onClick={[Function]}
                  to="b-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="c title"
                  menuType="primary"
                  onClick={[Function]}
                  to="c-to"
                />
              </nav>
            </Scrollable>
          </div>,
        ],
        "className": "menu",
      },
      "ref": [Function],
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Scrollable
              className="menu__scroller"
            >
              <Icon
                className="menu__cross"
                color=""
                name="close"
                onClick={[Function]}
                size="40px"
                style={Object {}}
              />
              <header>
                <h1
                  className="menu__title"
                >
                  Options
                </h1>
              </header>
              <nav>
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="a title"
                  menuType="primary"
                  onClick={[Function]}
                  to="a-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="b title"
                  menuType="primary"
                  onClick={[Function]}
                  to="b-to"
                />
                <MenuItem
                  icon=""
                  interfaceType=""
                  isActive={false}
                  label="c title"
                  menuType="primary"
                  onClick={[Function]}
                  to="c-to"
                />
              </nav>
            </Scrollable>,
            "className": "menu__wrap menu__content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Icon
                  className="menu__cross"
                  color=""
                  name="close"
                  onClick={[Function]}
                  size="40px"
                  style={Object {}}
                />,
                <header>
                  <h1
                    className="menu__title"
                  >
                    Options
                  </h1>
                </header>,
                null,
                <nav>
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="a title"
                    menuType="primary"
                    onClick={[Function]}
                    to="a-to"
                  />
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="b title"
                    menuType="primary"
                    onClick={[Function]}
                    to="b-to"
                  />
                  <MenuItem
                    icon=""
                    interfaceType=""
                    isActive={false}
                    label="c title"
                    menuType="primary"
                    onClick={[Function]}
                    to="c-to"
                  />
                </nav>,
              ],
              "className": "menu__scroller",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "menu__cross",
                  "color": "",
                  "name": "close",
                  "onClick": [Function],
                  "size": "40px",
                  "style": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1
                    className="menu__title"
                  >
                    Options
                  </h1>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Options",
                    "className": "menu__title",
                  },
                  "ref": null,
                  "rendered": "Options",
                  "type": "h1",
                },
                "type": "header",
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <MenuItem
                      icon=""
                      interfaceType=""
                      isActive={false}
                      label="a title"
                      menuType="primary"
                      onClick={[Function]}
                      to="a-to"
                    />,
                    <MenuItem
                      icon=""
                      interfaceType=""
                      isActive={false}
                      label="b title"
                      menuType="primary"
                      onClick={[Function]}
                      to="b-to"
                    />,
                    <MenuItem
                      icon=""
                      interfaceType=""
                      isActive={false}
                      label="c title"
                      menuType="primary"
                      onClick={[Function]}
                      to="c-to"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "a",
                    "nodeType": "function",
                    "props": Object {
                      "icon": "",
                      "interfaceType": "",
                      "isActive": false,
                      "label": "a title",
                      "menuType": "primary",
                      "onClick": [Function],
                      "to": "a-to",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "b",
                    "nodeType": "function",
                    "props": Object {
                      "icon": "",
                      "interfaceType": "",
                      "isActive": false,
                      "label": "b title",
                      "menuType": "primary",
                      "onClick": [Function],
                      "to": "b-to",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "c",
                    "nodeType": "function",
                    "props": Object {
                      "icon": "",
                      "interfaceType": "",
                      "isActive": false,
                      "label": "c title",
                      "menuType": "primary",
                      "onClick": [Function],
                      "to": "c-to",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "nav",
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
