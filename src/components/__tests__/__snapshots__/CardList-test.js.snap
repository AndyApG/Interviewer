// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardList component renders cards with list 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="scrollable"
>
    <CardList
        details={[Function]}
        label={[Function]}
        nodes={
            Array [
                Object {
                  "age": "22",
                  "name": "a name",
                  "uid": "a",
                },
                Object {
                  "age": "88",
                  "name": "b name",
                  "uid": "b",
                },
                Object {
                  "age": "33",
                  "name": "c name",
                  "uid": "c",
                },
              ]
        }
    />
</div>,
  "nodes": Array [
    <div
      className="scrollable"
>
      <CardList
            details={[Function]}
            label={[Function]}
            nodes={
                  Array [
                        Object {
                          "age": "22",
                          "name": "a name",
                          "uid": "a",
                        },
                        Object {
                          "age": "88",
                          "name": "b name",
                          "uid": "b",
                        },
                        Object {
                          "age": "33",
                          "name": "c name",
                          "uid": "c",
                        },
                      ]
            }
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Scrollable
        details={[Function]}
        label={[Function]}
        nodes={
                Array [
                        Object {
                          "age": "22",
                          "name": "a name",
                          "uid": "a",
                        },
                        Object {
                          "age": "88",
                          "name": "b name",
                          "uid": "b",
                        },
                        Object {
                          "age": "33",
                          "name": "c name",
                          "uid": "c",
                        },
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Scrollable {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "details": [Function],
          "label": [Function],
          "nodes": Array [
            Object {
              "age": "22",
              "name": "a name",
              "uid": "a",
            },
            Object {
              "age": "88",
              "name": "b name",
              "uid": "b",
            },
            Object {
              "age": "33",
              "name": "c name",
              "uid": "c",
            },
          ],
        },
        "refs": Object {},
        "state": Object {
          "isScrolling": false,
        },
        "updateScrollState": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="scrollable"
>
          <CardList
                    details={[Function]}
                    label={[Function]}
                    nodes={
                              Array [
                                        Object {
                                          "age": "22",
                                          "name": "a name",
                                          "uid": "a",
                                        },
                                        Object {
                                          "age": "88",
                                          "name": "b name",
                                          "uid": "b",
                                        },
                                        Object {
                                          "age": "33",
                                          "name": "c name",
                                          "uid": "c",
                                        },
                                      ]
                    }
          />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="scrollable"
>
          <CardList
                    details={[Function]}
                    label={[Function]}
                    nodes={
                              Array [
                                        Object {
                                          "age": "22",
                                          "name": "a name",
                                          "uid": "a",
                                        },
                                        Object {
                                          "age": "88",
                                          "name": "b name",
                                          "uid": "b",
                                        },
                                        Object {
                                          "age": "33",
                                          "name": "c name",
                                          "uid": "c",
                                        },
                                      ]
                    }
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Scrollable
    details={[Function]}
    label={[Function]}
    nodes={
        Array [
            Object {
              "age": "22",
              "name": "a name",
              "uid": "a",
            },
            Object {
              "age": "88",
              "name": "b name",
              "uid": "b",
            },
            Object {
              "age": "33",
              "name": "c name",
              "uid": "c",
            },
          ]
    }
/>,
}
`;
