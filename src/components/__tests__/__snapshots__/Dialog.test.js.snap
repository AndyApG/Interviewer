// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dialog /> component can render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    additionalInformation={null}
    cancelLabel=""
    confirmLabel=""
    hasCancelButton={false}
    name=""
    onCancel={[Function]}
    onConfirm={[Function]}
    show={false}
    title=""
    type=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="dialog"
      >
        <div
          className="dialog__background"
          transition-role="background"
        />
        <div
          className="dialog__window dialog__window--"
          onClick={[Function]}
          transition-role="window"
        >
          <div
            className="dialog__main"
          >
            <div
              className="dialog__main-icon"
            >
              <Icon
                className=""
                color=""
                name=""
                style={Object {}}
              />
            </div>
            <div
              className="dialog__main-content"
            >
              <h2
                className="dialog__main-title"
              >
                
              </h2>
            </div>
          </div>
          <footer
            className="dialog__footer"
          >
            <Button
              color=""
              content=""
              icon=""
              iconPosition="right"
              onClick={[Function]}
              size=""
            />
          </footer>
        </div>
      </div>,
      "in": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "dialog",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dialog__background"
            transition-role="background"
          />,
          <div
            className="dialog__window dialog__window--"
            onClick={[Function]}
            transition-role="window"
          >
            <div
              className="dialog__main"
            >
              <div
                className="dialog__main-icon"
              >
                <Icon
                  className=""
                  color=""
                  name=""
                  style={Object {}}
                />
              </div>
              <div
                className="dialog__main-content"
              >
                <h2
                  className="dialog__main-title"
                >
                  
                </h2>
              </div>
            </div>
            <footer
              className="dialog__footer"
            >
              <Button
                color=""
                content=""
                icon=""
                iconPosition="right"
                onClick={[Function]}
                size=""
              />
            </footer>
          </div>,
        ],
        "className": "dialog",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dialog__background",
            "transition-role": "background",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="dialog__main"
              >
                <div
                  className="dialog__main-icon"
                >
                  <Icon
                    className=""
                    color=""
                    name=""
                    style={Object {}}
                  />
                </div>
                <div
                  className="dialog__main-content"
                >
                  <h2
                    className="dialog__main-title"
                  >
                    
                  </h2>
                </div>
              </div>,
              null,
              <footer
                className="dialog__footer"
              >
                <Button
                  color=""
                  content=""
                  icon=""
                  iconPosition="right"
                  onClick={[Function]}
                  size=""
                />
              </footer>,
            ],
            "className": "dialog__window dialog__window--",
            "onClick": [Function],
            "transition-role": "window",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="dialog__main-icon"
                  >
                    <Icon
                      className=""
                      color=""
                      name=""
                      style={Object {}}
                    />
                  </div>,
                  <div
                    className="dialog__main-content"
                  >
                    <h2
                      className="dialog__main-title"
                    >
                      
                    </h2>
                  </div>,
                ],
                "className": "dialog__main",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Icon
                      className=""
                      color=""
                      name=""
                      style={Object {}}
                    />,
                    "className": "dialog__main-icon",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "",
                      "color": "",
                      "name": "",
                      "style": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2
                        className="dialog__main-title"
                      >
                        
                      </h2>,
                      null,
                    ],
                    "className": "dialog__main-content",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "",
                        "className": "dialog__main-title",
                      },
                      "ref": null,
                      "rendered": "",
                      "type": "h2",
                    },
                    null,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  null,
                  <Button
                    color=""
                    content=""
                    icon=""
                    iconPosition="right"
                    onClick={[Function]}
                    size=""
                  />,
                ],
                "className": "dialog__footer",
              },
              "ref": null,
              "rendered": Array [
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": null,
                    "color": "",
                    "content": "",
                    "icon": "",
                    "iconPosition": "right",
                    "onClick": [Function],
                    "size": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "footer",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="dialog"
        >
          <div
            className="dialog__background"
            transition-role="background"
          />
          <div
            className="dialog__window dialog__window--"
            onClick={[Function]}
            transition-role="window"
          >
            <div
              className="dialog__main"
            >
              <div
                className="dialog__main-icon"
              >
                <Icon
                  className=""
                  color=""
                  name=""
                  style={Object {}}
                />
              </div>
              <div
                className="dialog__main-content"
              >
                <h2
                  className="dialog__main-title"
                >
                  
                </h2>
              </div>
            </div>
            <footer
              className="dialog__footer"
            >
              <Button
                color=""
                content=""
                icon=""
                iconPosition="right"
                onClick={[Function]}
                size=""
              />
            </footer>
          </div>
        </div>,
        "in": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "dialog",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="dialog__background"
              transition-role="background"
            />,
            <div
              className="dialog__window dialog__window--"
              onClick={[Function]}
              transition-role="window"
            >
              <div
                className="dialog__main"
              >
                <div
                  className="dialog__main-icon"
                >
                  <Icon
                    className=""
                    color=""
                    name=""
                    style={Object {}}
                  />
                </div>
                <div
                  className="dialog__main-content"
                >
                  <h2
                    className="dialog__main-title"
                  >
                    
                  </h2>
                </div>
              </div>
              <footer
                className="dialog__footer"
              >
                <Button
                  color=""
                  content=""
                  icon=""
                  iconPosition="right"
                  onClick={[Function]}
                  size=""
                />
              </footer>
            </div>,
          ],
          "className": "dialog",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "dialog__background",
              "transition-role": "background",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="dialog__main"
                >
                  <div
                    className="dialog__main-icon"
                  >
                    <Icon
                      className=""
                      color=""
                      name=""
                      style={Object {}}
                    />
                  </div>
                  <div
                    className="dialog__main-content"
                  >
                    <h2
                      className="dialog__main-title"
                    >
                      
                    </h2>
                  </div>
                </div>,
                null,
                <footer
                  className="dialog__footer"
                >
                  <Button
                    color=""
                    content=""
                    icon=""
                    iconPosition="right"
                    onClick={[Function]}
                    size=""
                  />
                </footer>,
              ],
              "className": "dialog__window dialog__window--",
              "onClick": [Function],
              "transition-role": "window",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="dialog__main-icon"
                    >
                      <Icon
                        className=""
                        color=""
                        name=""
                        style={Object {}}
                      />
                    </div>,
                    <div
                      className="dialog__main-content"
                    >
                      <h2
                        className="dialog__main-title"
                      >
                        
                      </h2>
                    </div>,
                  ],
                  "className": "dialog__main",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Icon
                        className=""
                        color=""
                        name=""
                        style={Object {}}
                      />,
                      "className": "dialog__main-icon",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": "",
                        "color": "",
                        "name": "",
                        "style": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h2
                          className="dialog__main-title"
                        >
                          
                        </h2>,
                        null,
                      ],
                      "className": "dialog__main-content",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "",
                          "className": "dialog__main-title",
                        },
                        "ref": null,
                        "rendered": "",
                        "type": "h2",
                      },
                      null,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    null,
                    <Button
                      color=""
                      content=""
                      icon=""
                      iconPosition="right"
                      onClick={[Function]}
                      size=""
                    />,
                  ],
                  "className": "dialog__footer",
                },
                "ref": null,
                "rendered": Array [
                  null,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": null,
                      "color": "",
                      "content": "",
                      "icon": "",
                      "iconPosition": "right",
                      "onClick": [Function],
                      "size": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "footer",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
