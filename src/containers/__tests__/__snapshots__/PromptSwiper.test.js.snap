// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PromptSwiper /> renders ok 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PromptSwiper
    backward={[Function]}
    floating={false}
    forward={[Function]}
    minimizable={false}
    promptIndex={0}
    prompts={
      Array [
        Object {
          "text": "bar",
        },
        Object {
          "text": "foo",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Hammer
          onSwipe={[Function]}
          onTap={[Function]}
        >
          <div
            className="prompts"
          >
            <div
              className="prompts__pips"
            >
              <Pips
                count={2}
                currentIndex={0}
                large={false}
              />
            </div>
            <div
              className="prompts__prompts"
            >
              <Prompt
                isActive={true}
                isLeaving={false}
                label="bar"
              />
              <Prompt
                isActive={false}
                isLeaving={true}
                label="foo"
              />
            </div>
          </div>
        </Hammer>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="prompts"
          >
            <div
              className="prompts__pips"
            >
              <Pips
                count={2}
                currentIndex={0}
                large={false}
              />
            </div>
            <div
              className="prompts__prompts"
            >
              <Prompt
                isActive={true}
                isLeaving={false}
                label="bar"
              />
              <Prompt
                isActive={false}
                isLeaving={true}
                label="foo"
              />
            </div>
          </div>,
          "onSwipe": [Function],
          "onTap": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="prompts__pips"
              >
                <Pips
                  count={2}
                  currentIndex={0}
                  large={false}
                />
              </div>,
              <div
                className="prompts__prompts"
              >
                <Prompt
                  isActive={true}
                  isLeaving={false}
                  label="bar"
                />
                <Prompt
                  isActive={false}
                  isLeaving={true}
                  label="foo"
                />
              </div>,
            ],
            "className": "prompts",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Pips
                  count={2}
                  currentIndex={0}
                  large={false}
                />,
                "className": "prompts__pips",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "count": 2,
                  "currentIndex": 0,
                  "large": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Prompt
                    isActive={true}
                    isLeaving={false}
                    label="bar"
                  />,
                  <Prompt
                    isActive={false}
                    isLeaving={true}
                    label="foo"
                  />,
                ],
                "className": "prompts__prompts",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "function",
                  "props": Object {
                    "isActive": true,
                    "isLeaving": false,
                    "label": "bar",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "isActive": false,
                    "isLeaving": true,
                    "label": "foo",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      false,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Hammer
            onSwipe={[Function]}
            onTap={[Function]}
          >
            <div
              className="prompts"
            >
              <div
                className="prompts__pips"
              >
                <Pips
                  count={2}
                  currentIndex={0}
                  large={false}
                />
              </div>
              <div
                className="prompts__prompts"
              >
                <Prompt
                  isActive={true}
                  isLeaving={false}
                  label="bar"
                />
                <Prompt
                  isActive={false}
                  isLeaving={true}
                  label="foo"
                />
              </div>
            </div>
          </Hammer>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              className="prompts"
            >
              <div
                className="prompts__pips"
              >
                <Pips
                  count={2}
                  currentIndex={0}
                  large={false}
                />
              </div>
              <div
                className="prompts__prompts"
              >
                <Prompt
                  isActive={true}
                  isLeaving={false}
                  label="bar"
                />
                <Prompt
                  isActive={false}
                  isLeaving={true}
                  label="foo"
                />
              </div>
            </div>,
            "onSwipe": [Function],
            "onTap": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="prompts__pips"
                >
                  <Pips
                    count={2}
                    currentIndex={0}
                    large={false}
                  />
                </div>,
                <div
                  className="prompts__prompts"
                >
                  <Prompt
                    isActive={true}
                    isLeaving={false}
                    label="bar"
                  />
                  <Prompt
                    isActive={false}
                    isLeaving={true}
                    label="foo"
                  />
                </div>,
              ],
              "className": "prompts",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Pips
                    count={2}
                    currentIndex={0}
                    large={false}
                  />,
                  "className": "prompts__pips",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "count": 2,
                    "currentIndex": 0,
                    "large": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Prompt
                      isActive={true}
                      isLeaving={false}
                      label="bar"
                    />,
                    <Prompt
                      isActive={false}
                      isLeaving={true}
                      label="foo"
                    />,
                  ],
                  "className": "prompts__prompts",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "isActive": true,
                      "isLeaving": false,
                      "label": "bar",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "isActive": false,
                      "isLeaving": true,
                      "label": "foo",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        false,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
