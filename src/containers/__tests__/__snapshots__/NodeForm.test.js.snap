// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NodeForm /> should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NodeForm
    closeModal={[Function]}
    entity="node"
    fields={
        Array [
            Object {
              "component": "TextInput",
              "variable": "foo",
            },
          ]
    }
    initialValues={Object {}}
    name="baz"
    node={Object {}}
    onSubmit={[Function]}
    openModal={[Function]}
    resetValues={[Function]}
    showAddAnotherToggle={false}
    title="The form title"
    type="person"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <FormWizard
        autoFocus={true}
        closeModal={[Function]}
        controls={
                Array [
                        false,
                        <Button
                          aria-label="Submit"
                          color=""
                          content=""
                          icon=""
                          iconPosition="right"
                          onClick={[Function]}
                          size=""
                >
                          Submit
                </Button>,
                      ]
        }
        entity="node"
        fields={
                Array [
                        Object {
                          "component": "TextInput",
                          "variable": "foo",
                        },
                      ]
        }
        form="baz"
        initialValues={Object {}}
        name="baz"
        node={Object {}}
        onSubmit={[Function]}
        openModal={[Function]}
        resetValues={[Function]}
        showAddAnotherToggle={false}
        title="The form title"
        tooltip="bottom"
        type="person"
/>,
      "className": "modal--fullscreen",
      "name": "baz",
      "title": "The form title",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoFocus": true,
        "closeModal": [Function],
        "controls": Array [
          false,
          <Button
            aria-label="Submit"
            color=""
            content=""
            icon=""
            iconPosition="right"
            onClick={[Function]}
            size=""
>
            Submit
</Button>,
        ],
        "entity": "node",
        "fields": Array [
          Object {
            "component": "TextInput",
            "variable": "foo",
          },
        ],
        "form": "baz",
        "initialValues": Object {},
        "name": "baz",
        "node": Object {},
        "onSubmit": [Function],
        "openModal": [Function],
        "resetValues": [Function],
        "showAddAnotherToggle": false,
        "title": "The form title",
        "tooltip": "bottom",
        "type": "person",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FormWizard
          autoFocus={true}
          closeModal={[Function]}
          controls={
                    Array [
                              false,
                              <Button
                                aria-label="Submit"
                                color=""
                                content=""
                                icon=""
                                iconPosition="right"
                                onClick={[Function]}
                                size=""
                    >
                                Submit
                    </Button>,
                            ]
          }
          entity="node"
          fields={
                    Array [
                              Object {
                                "component": "TextInput",
                                "variable": "foo",
                              },
                            ]
          }
          form="baz"
          initialValues={Object {}}
          name="baz"
          node={Object {}}
          onSubmit={[Function]}
          openModal={[Function]}
          resetValues={[Function]}
          showAddAnotherToggle={false}
          title="The form title"
          tooltip="bottom"
          type="person"
/>,
        "className": "modal--fullscreen",
        "name": "baz",
        "title": "The form title",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "closeModal": [Function],
          "controls": Array [
            false,
            <Button
              aria-label="Submit"
              color=""
              content=""
              icon=""
              iconPosition="right"
              onClick={[Function]}
              size=""
>
              Submit
</Button>,
          ],
          "entity": "node",
          "fields": Array [
            Object {
              "component": "TextInput",
              "variable": "foo",
            },
          ],
          "form": "baz",
          "initialValues": Object {},
          "name": "baz",
          "node": Object {},
          "onSubmit": [Function],
          "openModal": [Function],
          "resetValues": [Function],
          "showAddAnotherToggle": false,
          "title": "The form title",
          "tooltip": "bottom",
          "type": "person",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
