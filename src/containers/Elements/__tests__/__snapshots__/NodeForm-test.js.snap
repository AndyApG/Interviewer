// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NodeForm /> should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Connect(Modal)
    className="modal--fullscreen"
    name="baz"
    title="The form title"
  >
    <FormWizard
      addAnother={false}
      autoFocus={true}
      closeModal={[Function]}
      controls={
        Array [
          false,
          <Button
            aria-label="Submit"
            color=""
            content=""
            icon=""
            iconPosition="right"
            onClick={[Function]}
            size=""
          >
            Submit
          </Button>,
        ]
      }
      entity="node"
      fields={
        Array [
          Object {
            "component": "TextInput",
            "variable": "foo",
          },
        ]
      }
      form="baz"
      initialValues={Object {}}
      name="baz"
      node={Object {}}
      onSubmit={[Function]}
      openModal={[Function]}
      resetValues={[Function]}
      title="The form title"
      type="person"
    />
  </Connect(Modal)>,
  "nodes": Array [
    <Connect(Modal)
      className="modal--fullscreen"
      name="baz"
      title="The form title"
    >
      <FormWizard
        addAnother={false}
        autoFocus={true}
        closeModal={[Function]}
        controls={
          Array [
            false,
            <Button
              aria-label="Submit"
              color=""
              content=""
              icon=""
              iconPosition="right"
              onClick={[Function]}
              size=""
            >
              Submit
            </Button>,
          ]
        }
        entity="node"
        fields={
          Array [
            Object {
              "component": "TextInput",
              "variable": "foo",
            },
          ]
        }
        form="baz"
        initialValues={Object {}}
        name="baz"
        node={Object {}}
        onSubmit={[Function]}
        openModal={[Function]}
        resetValues={[Function]}
        title="The form title"
        type="person"
      />
    </Connect(Modal)>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <NodeForm
        addAnother={false}
        closeModal={[Function]}
        entity="node"
        fields={
          Array [
            Object {
              "component": "TextInput",
              "variable": "foo",
            },
          ]
        }
        initialValues={Object {}}
        name="baz"
        node={Object {}}
        onSubmit={[Function]}
        openModal={[Function]}
        resetValues={[Function]}
        title="The form title"
        type="person"
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": NodeForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "continuousSubmit": [Function],
        "isLarge": [Function],
        "normalSubmit": [Function],
        "onSubmit": [Function],
        "props": Object {
          "addAnother": false,
          "closeModal": [Function],
          "entity": "node",
          "fields": Array [
            Object {
              "component": "TextInput",
              "variable": "foo",
            },
          ],
          "initialValues": Object {},
          "name": "baz",
          "node": Object {},
          "onSubmit": [Function],
          "openModal": [Function],
          "resetValues": [Function],
          "title": "The form title",
          "type": "person",
        },
        "refs": Object {},
        "state": Object {
          "typeOfSubmit": "normal",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Connect(Modal)
          className="modal--fullscreen"
          name="baz"
          title="The form title"
        >
          <FormWizard
            addAnother={false}
            autoFocus={true}
            closeModal={[Function]}
            controls={
              Array [
                false,
                <Button
                  aria-label="Submit"
                  color=""
                  content=""
                  icon=""
                  iconPosition="right"
                  onClick={[Function]}
                  size=""
                >
                  Submit
                </Button>,
              ]
            }
            entity="node"
            fields={
              Array [
                Object {
                  "component": "TextInput",
                  "variable": "foo",
                },
              ]
            }
            form="baz"
            initialValues={Object {}}
            name="baz"
            node={Object {}}
            onSubmit={[Function]}
            openModal={[Function]}
            resetValues={[Function]}
            title="The form title"
            type="person"
          />
        </Connect(Modal)>,
        "_debugID": 2,
        "_renderedOutput": <Connect(Modal)
          className="modal--fullscreen"
          name="baz"
          title="The form title"
        >
          <FormWizard
            addAnother={false}
            autoFocus={true}
            closeModal={[Function]}
            controls={
              Array [
                false,
                <Button
                  aria-label="Submit"
                  color=""
                  content=""
                  icon=""
                  iconPosition="right"
                  onClick={[Function]}
                  size=""
                >
                  Submit
                </Button>,
              ]
            }
            entity="node"
            fields={
              Array [
                Object {
                  "component": "TextInput",
                  "variable": "foo",
                },
              ]
            }
            form="baz"
            initialValues={Object {}}
            name="baz"
            node={Object {}}
            onSubmit={[Function]}
            openModal={[Function]}
            resetValues={[Function]}
            title="The form title"
            type="person"
          />
        </Connect(Modal)>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <NodeForm
    addAnother={false}
    closeModal={[Function]}
    entity="node"
    fields={
      Array [
        Object {
          "component": "TextInput",
          "variable": "foo",
        },
      ]
    }
    initialValues={Object {}}
    name="baz"
    node={Object {}}
    onSubmit={[Function]}
    openModal={[Function]}
    resetValues={[Function]}
    title="The form title"
    type="person"
  />,
}
`;
