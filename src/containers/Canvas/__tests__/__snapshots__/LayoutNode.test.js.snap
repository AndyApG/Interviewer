// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LayoutNode /> renders ok 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LayoutNode
    allowPositioning={false}
    allowSelect={false}
    areaHeight={40}
    areaWidth={100}
    draggableType="bar"
    getLabel={[Function]}
    layoutVariable="foo"
    linking={false}
    node={
      Object {
        "attributes": Object {
          "foo": Object {
            "x": 0.77,
            "y": 0.2,
          },
          "label": "some content",
        },
      }
    }
    onDropped={[Function]}
    onSelected={[Function]}
    selected={false}
    updateNode={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <DragSource
        allowDrag={false}
        allowSelect={false}
        animate={false}
        attributes={
          Object {
            "foo": Object {
              "x": 0.77,
              "y": 0.2,
            },
            "label": "some content",
          }
        }
        linking={false}
        meta={[Function]}
        onSelected={[Function]}
        scrollDirection="NO_SCROLL"
        selected={false}
      />,
      "className": "node-layout__node",
      "style": Object {
        "left": "77%",
        "top": "20%",
        "transform": "translate(-50%, -50%)",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowDrag": false,
        "allowSelect": false,
        "animate": false,
        "attributes": Object {
          "foo": Object {
            "x": 0.77,
            "y": 0.2,
          },
          "label": "some content",
        },
        "linking": false,
        "meta": [Function],
        "onSelected": [Function],
        "scrollDirection": "NO_SCROLL",
        "selected": false,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <DragSource
          allowDrag={false}
          allowSelect={false}
          animate={false}
          attributes={
            Object {
              "foo": Object {
                "x": 0.77,
                "y": 0.2,
              },
              "label": "some content",
            }
          }
          linking={false}
          meta={[Function]}
          onSelected={[Function]}
          scrollDirection="NO_SCROLL"
          selected={false}
        />,
        "className": "node-layout__node",
        "style": Object {
          "left": "77%",
          "top": "20%",
          "transform": "translate(-50%, -50%)",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "allowDrag": false,
          "allowSelect": false,
          "animate": false,
          "attributes": Object {
            "foo": Object {
              "x": 0.77,
              "y": 0.2,
            },
            "label": "some content",
          },
          "linking": false,
          "meta": [Function],
          "onSelected": [Function],
          "scrollDirection": "NO_SCROLL",
          "selected": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
