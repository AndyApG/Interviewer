var Network=function e(){var e={},n={};return e.init=function(){return notify("Network Initialising",2),window.nodes=session.registerData("nodes",!0),window.edges=session.registerData("edges",!0),!0},e.addNode=function(n){if("undefined"!=typeof n.id&&e.getNode(n.id)!==!1)return notify("Node already exists with id "+n.id+". Cancelling!",2),!1;for(var t=0;e.getNode(t)!==!1;)t++;var d={id:t};extend(d,n),session.addData("nodes",d,!0);var o=new CustomEvent("log",{detail:{eventType:"nodeCreate",eventObject:d}});window.dispatchEvent(o);var r=new CustomEvent("nodeAdded",{detail:d});window.dispatchEvent(r);var i=new Event("unsavedChanges");return window.dispatchEvent(i),d.id},e.addEdge=function(n){if("undefined"==typeof n.from||"undefined"==typeof n.to)return notify('ERROR: "To" and "From" must BOTH be defined.',2),!1;if("undefined"!==n.id&&e.getEdge(n.id)!==!1)return notify("edge with this id already exists!!!",2),!1;for(var t=0;e.getEdge(t)!==!1;)t++;var d={id:t,type:"Default"};extend(d,n);var o=!1,r={},i;if(r=$.extend(!0,{},n),i=r.to,r.to=r.from,r.from=i,(e.getEdges(n).length>0||e.getEdges(r).length>0)&&(o=!0),o===!1){session.addData("edges",d,!0);var a=new CustomEvent("log",{detail:{eventType:"edgeCreate",eventObject:d}});window.dispatchEvent(a);var s=new CustomEvent("edgeAdded",{detail:d});window.dispatchEvent(s);var v=new Event("unsavedChanges");return window.dispatchEvent(v),d.id}return notify("ERROR: Edge already exists!",2),!1},e.removeEdges=function(n){e.removeEdge(n)},e.removeEdge=function(e){if(!e)return!1;var n,t,d=session.returnData("edges");if("object"==typeof e&&"undefined"!=typeof e.length)for(var o=0;o<e.length;o++)d.remove(e[o]),n=new CustomEvent("log",{detail:{eventType:"edgeRemove",eventObject:e[o]}}),t=new CustomEvent("edgeRemoved",{detail:e[o]}),window.dispatchEvent(n),window.dispatchEvent(t);else d.remove(e),n=new CustomEvent("log",{detail:{eventType:"edgeRemove",eventObject:e}}),t=new CustomEvent("edgeRemoved",{detail:e}),window.dispatchEvent(n),window.dispatchEvent(t);session.addData("edges",d);var r=new Event("unsavedChanges");return window.dispatchEvent(r),!0},e.removeNode=function(n){var t,d;e.removeEdge(e.getNodeEdges(n));for(var o=session.returnData("nodes"),r=0;r<o.length;r++)if(o[r].id===n)return d=new CustomEvent("log",{detail:{eventType:"nodeRemove",eventObject:o[r]}}),window.dispatchEvent(d),t=new CustomEvent("edgeRemoved",{detail:o[r]}),window.dispatchEvent(t),o.remove(o[r]),session.addData("nodes",o),!0;return!1},e.updateEdge=function(n,t,d){if(e.getEdge(n)===!1||void 0===t)return!1;var o=e.getEdge(n),r,i;extend(o,t),r=new CustomEvent("edgeUpdatedEvent",{detail:o}),window.dispatchEvent(r),i=new CustomEvent("log",{detail:{eventType:"edgeUpdate",eventObject:o}}),window.dispatchEvent(i);var a=new Event("unsavedChanges");window.dispatchEvent(a),d&&d()},e.updateNode=function(n,t,d){if(e.getNode(n)===!1||void 0===t)return!1;var o=e.getNode(n),r,i;extend(o,t),r=new CustomEvent("nodeUpdatedEvent",{detail:o}),window.dispatchEvent(r),i=new CustomEvent("log",{detail:{eventType:"nodeUpdate",eventObject:o}}),window.dispatchEvent(i);var a=new Event("unsavedChanges");window.dispatchEvent(a),d&&d()},e.getNode=function(e){if(void 0===e)return!1;for(var n=session.returnData("nodes"),t=0;t<n.length;t++)if(n[t].id===e)return n[t];return!1},e.getEdge=function(e){if(void 0===e)return!1;for(var n=session.returnData("edges"),t=0;t<n.length;t++)if(n[t].id===e)return n[t];return!1},e.filterObject=function(e,n){if(!n)return!1;var t=e.filter(function(e){var t=!0;for(var d in n)void 0!==e[d]?e[d]!==n[d]&&(t=!1):t=!1;return t===!0?e:void 0});if("undefined"!=typeof n.from&&"undefined"!=typeof n.to){var d={},o;d=$.extend(!0,{},n),o=d.to,d.to=d.from,d.from=o;var r=e.filter(function(e){var n=!0;for(var t in d)void 0!==e[t]?e[t]!==d[t]&&(n=!1):n=!1;return n===!0?e:void 0});t=t.concat(r)}return t},e.getNodes=function(n,t){var d=session.returnData("nodes"),o;return o="undefined"!=typeof n&&0!==Object.keys(n).length?e.filterObject(d,n):d,t&&(o=t(o)),o},e.getEdges=function(n,t){var d=session.returnData("edges"),o;return o="undefined"!=typeof n&&0!==Object.keys(n).length?e.filterObject(d,n):d,t&&(o=t(o)),o},e.getNodeInboundEdges=function(n){return e.getEdges({to:n})},e.getNodeOutboundEdges=function(n){return e.getEdges({from:n})},e.getNodeEdges=function(n){if(e.getNode(n)===!1)return!1;var t=e.getNodeInboundEdges(n),d=e.getNodeOutboundEdges(n),o=t.concat(d);return o},e.setProperties=function(e,n){if("undefined"==typeof e)return!1;if("object"==typeof e&&e.length>0)for(var t=0;t<e.length;t++)$.extend(e[t],n);else $.extend(e,n)},e.returnNetwork=function(){return n},e.returnAllNodes=function(){return session.returnData("nodes")},e.returnAllEdges=function(){return session.returnData("edges")},e.createRandomGraph=function(n,t){var d=session.returnData("nodes");n=n||10,t=t||.4,notify("Creating random graph...",1);for(var o=0;n>o;o++){var r=o+1;notify("Adding node "+r+" of "+n,2);var i={coords:[Math.round(randomBetween(100,window.innerWidth-100)),Math.round(randomBetween(100,window.innerHeight-100))]};e.addNode(i)}notify("Adding edges.",3),$.each(d,function(n){if(randomBetween(0,1)<t){var o=Math.round(randomBetween(0,d.length-1));e.addEdge({from:d[n].id,to:d[o].id})}})},e.init(),e};